package Views;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */


import Controller.RandomAccesFile.CustomersAccesFile;
import java.awt.Color;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Clientes;

/**
 *
 * @author Carlos Fabricio
 */
public class CustomersPanel extends javax.swing.JPanel {
    
    DefaultTableModel model;
    private List<Clientes> array;
    private TableRowSorter<DefaultTableModel> rowSorter;
    CustomersAccesFile archiv;
    /**
     * Creates new form CustomersPanel
     */
    public CustomersPanel() {
        initComponents();
        model = new DefaultTableModel();    
        model.addColumn("ID");
        model.addColumn("Nombre");
        model.addColumn("Apellido");
        model.addColumn("Fecha de nacimiento");
        model.addColumn("Direccion");
        model.addColumn("Dni o Ruc");
        model.addColumn("Telefono");
        model.addColumn("Correo"); 
        model.addColumn("Sexo");
        model.addColumn("Fecha de Actualizacion");
        model.addColumn("Fecha de creacion");
        tbl.setModel(model);
        rowSorter = new TableRowSorter<>(model);
        tbl.setRowSorter(rowSorter);
        archiv = new CustomersAccesFile();

        cargarDatosEnTabla();
        
        tbl.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                int selectedRow = tbl.getSelectedRow();
                if (selectedRow >= 0) {
                    txtNom.setText(tbl.getValueAt(selectedRow, 1).toString());
                    txtApelli.setText(tbl.getValueAt(selectedRow, 2).toString());
                    txtFechaNac.setText(tbl.getValueAt(selectedRow, 3).toString());
                    txtDireccion.setText(tbl.getValueAt(selectedRow, 4).toString());
                    txtDnioRuc.setText(tbl.getValueAt(selectedRow, 5).toString());
                    txtTelef.setText(tbl.getValueAt(selectedRow, 6).toString());
                    txtCorreo.setText(tbl.getValueAt(selectedRow, 7).toString());
                    txtSexo.setText(tbl.getValueAt(selectedRow, 8).toString());
                }
            }
        });
            
        // Configurar el listener del JTextField para la b√∫squeda
        txfSearchValue.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                applyFilter();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                applyFilter();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                applyFilter();
            }

            private void applyFilter() {
                String text = txfSearchValue.getText();
                if (text.trim().isEmpty()) {
                    rowSorter.setRowFilter(null);
                    btnCleanSearch.setBackground(null);
                    btnCleanSearch.setForeground(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text, 1));
                    btnCleanSearch.setBackground(Color.RED);
                    btnCleanSearch.setForeground(Color.WHITE);
                    tbl.clearSelection();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtApelli = new javax.swing.JTextField();
        txtFechaNac = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        txtTelef = new javax.swing.JTextField();
        txtDnioRuc = new javax.swing.JTextField();
        btnCleanSearch = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        Editar = new javax.swing.JButton();
        txtSexo = new javax.swing.JTextField();
        txfSearchValue = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(700, 400));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        txtApelli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApelliActionPerformed(evt);
            }
        });

        txtFechaNac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaNacActionPerformed(evt);
            }
        });

        txtCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel5.setText("Lista de clientes");

        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 0, 0));
        jButton4.setText("Crear un Cliente");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        txtTelef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefActionPerformed(evt);
            }
        });

        txtDnioRuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDnioRucActionPerformed(evt);
            }
        });

        btnCleanSearch.setBackground(new java.awt.Color(255, 0, 0));
        btnCleanSearch.setText("Remover filtros");
        btnCleanSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanSearchActionPerformed(evt);
            }
        });

        Eliminar.setBackground(new java.awt.Color(255, 0, 0));
        Eliminar.setText("Eliminar un cliente");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        Editar.setBackground(new java.awt.Color(255, 0, 0));
        Editar.setText("Editar un cliente");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });

        txtSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSexoActionPerformed(evt);
            }
        });

        txfSearchValue.setToolTipText("");
        txfSearchValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfSearchValueActionPerformed(evt);
            }
        });
        txfSearchValue.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txfSearchValuePropertyChange(evt);
            }
        });

        jLabel2.setText("Nombre");

        jLabel3.setText("Apellido");

        jLabel4.setText("Fecha de nacimiento");
        jLabel4.setToolTipText("");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel6.setText("Direccion");

        jLabel7.setText("Dni o Ruc");

        jLabel8.setText("Telefono");

        jLabel9.setText("Correo");

        jLabel10.setText("Sexo");

        jLabel11.setText("Buscar:");

        txtNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomActionPerformed(evt);
            }
        });

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombres", "Apellidos", "Fecha nacimiento", "Direcci√≥n", "DNI - RUC", "Telefono", "Correo electronica", "Sexo", "Fecha de actualizacion", "Fecha de creacion"
            }
        ));
        tbl.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tbl);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtApelli, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtFechaNac, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtNom, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                    .addComponent(txtSexo))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtDireccion)
                                        .addComponent(txtDnioRuc, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelef, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txfSearchValue, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCleanSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApelli, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel3)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Editar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txfSearchValue, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(btnCleanSearch)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtDnioRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        int fila = tbl.getSelectedRow();
        if(fila >= 0) {
            int opcion = JOptionPane.showConfirmDialog(null, "¬øEst√° seguro de eliminar la fila seleccionada?", "Confirmar eliminaci√≥n", JOptionPane.YES_NO_OPTION);
            try{

                int id = Integer.parseInt(tbl.getValueAt(fila, 0).toString());

                archiv.openFile("customers.dat");
                archiv.eliminarClientePorId(id);
                archiv.closeFile();

                cargarDatosEnTabla();
                limpiarCampos();
            }
            catch(IOException e)
            {
                JOptionPane.showMessageDialog(null,"No se pudo actualizar");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Por favor seleccione una fila para eliminar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_EliminarActionPerformed

    private void btnCleanSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanSearchActionPerformed

        txfSearchValue.setText("");
        btnCleanSearch.setBackground(null);
        btnCleanSearch.setForeground(null);
        rowSorter.setRowFilter(null);
    }//GEN-LAST:event_btnCleanSearchActionPerformed

    private void txtDnioRucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDnioRucActionPerformed
        Validation();
    }//GEN-LAST:event_txtDnioRucActionPerformed

    private void txtTelefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefActionPerformed
        Validation();
    }//GEN-LAST:event_txtTelefActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        String nombre = txtNom.getText();
        String apellido = txtApelli.getText();
        String fechaNacimiento = txtFechaNac.getText();
        String direccion = txtDireccion.getText();
        String dniORuc = txtDnioRuc.getText();
        String telefono = txtTelef.getText();
        String correo = txtCorreo.getText();
        String sexo = txtSexo.getText();

        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");

        try
        {
            archiv.openFile("customers.dat");

            int idInt = archiv.newId();
            int telefonoInt = Integer.parseInt(telefono);
            int dniORucInt = Integer.parseInt(dniORuc);

            LocalDate fechaNacimientoLocalDate = LocalDate.parse(fechaNacimiento, formatter);

            LocalDate fechaActualizacionLocalDate = LocalDate.now();
            LocalDate fechaCreacionLocalDate = LocalDate.now();

            Clientes cliente = new Clientes(nombre, apellido, direccion, correo, sexo, idInt, fechaNacimientoLocalDate, dniORucInt, telefonoInt, fechaActualizacionLocalDate, fechaCreacionLocalDate);

            archiv.addCustomer(cliente);
            archiv.closeFile();

            DefaultTableModel model = (DefaultTableModel) tbl.getModel();

            cargarDatosEnTabla();
            limpiarCampos();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error: Uno o m√°s campos no son n√∫meros enteros v√°lidos.", "Error de conversi√≥n", JOptionPane.ERROR_MESSAGE);
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Error: El formato de fecha no es v√°lido.", "Error de formato de fecha", JOptionPane.ERROR_MESSAGE);
        }catch(IOException e)
        {
            JOptionPane.showMessageDialog(null,"No se pudo grabar en el archivo");
        }
        }

        private void limpiarCampos() {
            txtNom.setText("");
            txtApelli.setText("");
            txtFechaNac.setText("");
            txtDnioRuc.setText("");
            txtCorreo.setText("");
            txtDireccion.setText("");
            txtTelef.setText("");
            txtSexo.setText("");
            tbl.clearSelection();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        Validation();
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void txtCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoActionPerformed
        Validation();       // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoActionPerformed

    private void txtFechaNacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaNacActionPerformed
        Validation();
    }//GEN-LAST:event_txtFechaNacActionPerformed

    private void txfSearchValuePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txfSearchValuePropertyChange

    }//GEN-LAST:event_txfSearchValuePropertyChange

    private void txfSearchValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfSearchValueActionPerformed

    }//GEN-LAST:event_txfSearchValueActionPerformed

    private void txtNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomActionPerformed
        Validation();
    }//GEN-LAST:event_txtNomActionPerformed

    private void txtSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSexoActionPerformed
        Validation();
    }//GEN-LAST:event_txtSexoActionPerformed

    private void txtApelliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApelliActionPerformed
        Validation();
    }//GEN-LAST:event_txtApelliActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        int fila = tbl.getSelectedRow();

        if (fila >= 0) {

            String nombre = txtNom.getText();
            String apellido = txtApelli.getText();
            String fechaNacimiento = txtFechaNac.getText();
            String direccion = txtDireccion.getText();
            String dniORuc = txtDnioRuc.getText();
            String telefono = txtTelef.getText();
            String correo = txtCorreo.getText();
            String sexo = txtSexo.getText();

            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");

            try {
                int idInt = Integer.parseInt(tbl.getValueAt(fila, 0).toString());
                int telefonoInt = Integer.parseInt(telefono);
                int dniORucInt = Integer.parseInt(dniORuc);

                LocalDate fechaNacimientoLocalDate = LocalDate.parse(fechaNacimiento, formatter);
                LocalDate fechaActualizacionLocalDate = LocalDate.now();

                Clientes cliente = array.get(fila);
                cliente.setId(idInt);
                cliente.setNombre(nombre);
                cliente.setApellido(apellido);
                cliente.setFechadenacimiento(fechaNacimientoLocalDate);
                cliente.setDireccion(direccion);
                cliente.setDnioruc(dniORucInt);
                cliente.setTelefono(telefonoInt);
                cliente.setCorreo(correo);
                cliente.setSexo(sexo);
                cliente.setFechaactu(fechaActualizacionLocalDate);

                archiv.openFile("customers.dat");
                archiv.actualizarClientePorId(idInt,cliente);
                archiv.closeFile();

                cargarDatosEnTabla();
                limpiarCampos();

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Error: Uno o m√°s campos no son n√∫meros enteros v√°lidos.", "Error de conversi√≥n", JOptionPane.ERROR_MESSAGE);
            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(this, "Error: El formato de fecha no es v√°lido.", "Error de formato de fecha", JOptionPane.ERROR_MESSAGE);
            }
            catch(IOException e)
            {
                JOptionPane.showMessageDialog(null,"No se pudo actualizar");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ninguna fila para editar.", "Error de selecci√≥n", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_EditarActionPerformed
        
        private void cargarDatosEnTabla() {
        try {
        archiv.openFile("customers.dat");
        array = archiv.getClientesList();
        
        model.setRowCount(0);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");

        for (Clientes cliente : array) {
            Object[] row = {
                cliente.getId(),
                cliente.getNombre(),
                cliente.getApellido(),
                cliente.getFechadenacimiento().format(formatter),
                cliente.getDireccion(),
                cliente.getDnioruc(),
                cliente.getTelefono(),
                cliente.getCorreo(),
                cliente.getSexo(),
                cliente.getFechaactu().format(formatter),
                cliente.getFechacrea().format(formatter)
            };
            model.addRow(row);
        }
        
        archiv.closeFile();
        }catch (IOException e) {
            e.printStackTrace();
        } 
    }
    
    private void Validation(){
        String nombre = txtNom.getText();
        String apellido = txtApelli.getText();
        String fechaNacimiento = txtFechaNac.getText();
        String direccion = txtDnioRuc.getText();
        String dniORuc = txtCorreo.getText();
        String telefono = txtDireccion.getText();
        String correo = txtTelef.getText();
        String sexo = txtSexo.getText();

        if (nombre.isEmpty() || apellido.isEmpty() || fechaNacimiento.isEmpty() || direccion.isEmpty() || dniORuc.isEmpty() || telefono.isEmpty() || correo.isEmpty() || sexo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Error: Uno o m√°s campos est√°n vac√≠os.", "Error de validaci√≥n", JOptionPane.ERROR_MESSAGE);
        } else {
            // Aqu√≠ ir√≠a el c√≥digo para procesar los datos ingresados
        }  
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Editar;
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton btnCleanSearch;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txfSearchValue;
    private javax.swing.JTextField txtApelli;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDnioRuc;
    private javax.swing.JTextField txtFechaNac;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtSexo;
    private javax.swing.JTextField txtTelef;
    // End of variables declaration//GEN-END:variables
}
